{"version":3,"file":"matcher.js","sourceRoot":"","sources":["../src/matcher.ts"],"names":[],"mappings":"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","sourcesContent":["// MIT License\n//\n// Copyright (c) 2020 Datasert Inc\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport {DateTime} from 'luxon';\nimport {CronExpr, CronExprs, CronField, PlainObject, parse, ParseOptions} from '@datasert/cronjs-parser';\n\nexport interface Func<I, O> {\n  (input: I): O;\n}\n\nexport interface MatchOptions extends ParseOptions {\n  timezone?: string;\n  startAt?: string;\n  endAt?: string;\n  matchCount?: number;\n  formatInTimezone?: boolean;\n  maxLoopCount?: number;\n  matchValidator?: Func<string, boolean>;\n}\n\ninterface FieldInfo {\n  min: number;\n  max: number;\n}\n\nconst MAX_LOOP_COUNT = 100_000;\nconst FLD_SECOND = 'second';\nconst FLD_MINUTE = 'minute';\nconst FLD_HOUR = 'hour';\nconst FLD_DAY_OF_MONTH = 'day_of_month';\nconst FLD_MONTH = 'month';\nconst FLD_DAY_OF_WEEK = 'day_of_week';\nconst FLD_YEAR = 'year';\nconst DAY_SUN = 0;\nconst DAY_MON = 1;\nconst DAY_FRI = 5;\nconst DAY_SAT = 6;\n\nconst FIELD_INFO: PlainObject<FieldInfo> = {\n  [FLD_SECOND]: {\n    min: 0,\n    max: 59,\n  },\n  [FLD_MINUTE]: {\n    min: 0,\n    max: 59,\n  },\n  [FLD_HOUR]: {\n    min: 0,\n    max: 23,\n  },\n  [FLD_DAY_OF_MONTH]: {\n    min: 1,\n    max: 31,\n  },\n  [FLD_MONTH]: {\n    min: 1,\n    max: 12,\n  },\n  [FLD_DAY_OF_WEEK]: {\n    min: 0,\n    max: 6,\n  },\n  [FLD_YEAR]: {\n    min: 1970,\n    max: 2099,\n  },\n};\n\nconst TZ_UTC = 'Etc/UTC';\nconst FIELDS = [FLD_SECOND, FLD_MINUTE, FLD_HOUR, FLD_DAY_OF_MONTH, FLD_MONTH, FLD_YEAR, FLD_DAY_OF_WEEK].reverse();\nconst FIELDS_SANS_DAY_REVERSE = [FLD_SECOND, FLD_MINUTE, FLD_HOUR, FLD_MONTH, FLD_YEAR].reverse();\n\n// from https://stackoverflow.com/questions/4459928/how-to-deep-clone-in-javascript/\nfunction deepClone(obj: any) {\n  if (!obj) {\n    return obj;\n  }\n\n  let v;\n  let bObject: any = Array.isArray(obj) ? [] : {};\n  for (const k in obj) {\n    v = obj[k];\n    bObject[k] = typeof v === 'object' ? deepClone(v) : v;\n  }\n\n  return bObject;\n}\n\nfunction dedupe(inArray: any[], keySupplier = (it: any) => it) {\n  const seen = new Set();\n  const deduped: any[] = [];\n\n  inArray.forEach((x: any) => {\n    const keyValue = keySupplier(x);\n    if (!seen.has(keyValue)) {\n      seen.add(keyValue);\n      deduped.push(x);\n    }\n  });\n\n  return deduped;\n}\n\nfunction sort(values: number[]): number[] {\n  values.sort((a, b) => a - b);\n  return values;\n}\n\nfunction getWeekDay(time: DateTime) {\n  const weekday = time.weekday;\n  return weekday === 7 ? 0 : weekday;\n}\n\nfunction getValues(from: number, to: number, step: number) {\n  const values: number[] = [];\n  for (let i = from; i <= to; i += step) {\n    values.push(i);\n  }\n\n  return values;\n}\n\nfunction isBlank(values?: any[]) {\n  return !values || values.length === 0;\n}\n\nfunction expandFields(exprs: CronExprs, field: string, startYear: number): number[] {\n  const values: number[] = [];\n  exprs.expressions.forEach((expr: CronExpr) => {\n    values.push(...expandField(expr, field, startYear));\n  });\n\n  return values.length === 0 ? values : sort(dedupe(values));\n}\n\nfunction expandField(expr: CronExpr, field: string, startYear: number): number[] {\n  const exprField = expr[field];\n  if (exprField.omit) {\n    return field === FLD_SECOND ? [0] : [];\n  }\n\n  if (field === FLD_DAY_OF_WEEK) {\n    const info = FIELD_INFO[FLD_DAY_OF_MONTH];\n    return getValues(info.min, info.max, 1);\n  }\n\n  const info = FIELD_INFO[field];\n  const all =\n    exprField.all ||\n    exprField.lastDay ||\n    exprField.lastWeekday ||\n    !isBlank(exprField.lastDays) ||\n    !isBlank(exprField.nearestWeekdays) ||\n    !isBlank(exprField.nthDays);\n\n  const values = [...(exprField.values || [])];\n\n  if (all) {\n    const from = field == FLD_YEAR ? startYear : info.min;\n    values.push(...getValues(from, info.max, 1));\n    return values;\n  }\n\n  if (exprField.ranges) {\n    exprField.ranges.forEach((range) => {\n      values.push(...getValues(range.from, range.to, 1));\n    });\n  }\n\n  if (exprField.steps) {\n    exprField.steps.forEach((step) => {\n      values.push(...getValues(step.from, step.to, step.step));\n    });\n  }\n\n  if (exprField.steps) {\n    exprField.steps.forEach((step) => {\n      values.push(...getValues(step.from, step.to, step.step));\n    });\n  }\n\n  return values;\n}\n\nfunction mergeExprs(exprs: CronExprs, startYear: number): CronExpr {\n  const mergedExpr: PlainObject<CronField> = {};\n  for (const field of FIELDS) {\n    if (field === FLD_DAY_OF_WEEK || field === FLD_DAY_OF_MONTH) {\n      continue;\n    }\n\n    mergedExpr[field] = {\n      values: expandFields(exprs, field, startYear),\n    };\n  }\n\n  mergedExpr[FLD_DAY_OF_MONTH] = {\n    values: sort(\n      dedupe([...expandFields(exprs, FLD_DAY_OF_MONTH, startYear), ...expandFields(exprs, FLD_DAY_OF_WEEK, startYear)])\n    ),\n  };\n\n  return mergedExpr;\n}\n\nfunction simplifyField(expr: CronExpr, field: string) {\n  const exprField = expr[field];\n  if (exprField.steps) {\n    exprField.values = exprField.values || [];\n\n    exprField.steps.forEach((step) => {\n      exprField.values!!.push(...getValues(step.from, step.to, step.step));\n    });\n\n    delete exprField.steps;\n  }\n}\n\nfunction simplifyExprs(exprs: CronExprs): CronExprs {\n  for (const expr of exprs.expressions) {\n    for (const field of FIELDS) {\n      simplifyField(expr, field);\n    }\n  }\n\n  return exprs;\n}\n\nfunction setTime(time: DateTime, values: object): DateTime {\n  return time.set(values);\n}\n\nfunction* getTimeSeries(exprs: CronExprs, startTime: DateTime) {\n  const mergedExpr = mergeExprs(exprs, startTime.year);\n  const startMillis = startTime.toMillis();\n\n  let newTime = startTime;\n  let startTimeReached = false;\n\n  for (let year of mergedExpr[FLD_YEAR].values!!) {\n    if (year < startTime.year) {\n      continue;\n    }\n\n    newTime = setTime(newTime, {year});\n\n    for (let month of mergedExpr[FLD_MONTH].values!!) {\n      if (year === startTime.year && month < startTime.month) {\n        continue;\n      }\n\n      newTime = setTime(newTime, {month});\n\n      for (let day of mergedExpr[FLD_DAY_OF_MONTH].values!!) {\n        if (year === startTime.year && month === startTime.month && day < startTime.day) {\n          continue;\n        }\n\n        if (day > newTime.daysInMonth) {\n          continue;\n        }\n\n        newTime = setTime(newTime, {day});\n\n        for (let hour of mergedExpr[FLD_HOUR].values!!) {\n          if (year === startTime.year && month === startTime.month && day === startTime.day && hour < startTime.hour) {\n            continue;\n          }\n\n          newTime = setTime(newTime, {hour});\n\n          for (let minute of mergedExpr[FLD_MINUTE].values!!) {\n            newTime = setTime(newTime, {minute});\n\n            for (let second of mergedExpr[FLD_SECOND].values!!) {\n              newTime = setTime(newTime, {second});\n\n              if (!startTimeReached) {\n                if (newTime.toMillis() >= startMillis) {\n                  startTimeReached = true;\n                }\n              }\n\n              if (startTimeReached) {\n                // console.log(`##### yielding time ${newTime.toISO()}`);\n                yield newTime;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getLastDay(time: DateTime, day?: number) {\n  let endOfMonth = time.endOf('month');\n  const lastDay = endOfMonth.day;\n  if (day === undefined) {\n    return lastDay;\n  }\n\n  while (getWeekDay(endOfMonth) !== day) {\n    endOfMonth = endOfMonth.plus({day: -1});\n  }\n\n  return endOfMonth.day;\n}\n\nfunction getLastWeekDay(time: DateTime) {\n  let endOfMonth = time.endOf('month');\n  const lastDay = getWeekDay(endOfMonth);\n  if (lastDay >= DAY_MON && lastDay <= DAY_FRI) {\n    return endOfMonth.day;\n  }\n\n  return getLastDay(time, DAY_FRI);\n}\n\n/**\n * Returns all days of particular type in the month. For ex., returns all mondays or fridays etc\n */\nfunction getDaysOfType(time: DateTime, day: number) {\n  const days: number[] = [];\n  for (let i = 1; i < 31; i++) {\n    const newTime = time.set({day: i});\n    if (newTime.month != time.month) {\n      // means it split over to next month\n      break;\n    }\n\n    if (getWeekDay(newTime) === day) {\n      days.push(newTime.day);\n    }\n  }\n\n  return days;\n}\n\nfunction isWeekday(time: DateTime) {\n  const lastDay = getWeekDay(time);\n  return lastDay >= DAY_MON && lastDay <= DAY_FRI;\n}\n\nfunction isDay(time: DateTime, day: number) {\n  return getWeekDay(time) === day;\n}\n\nfunction setDayWithinMonth(time: DateTime, day: number) {\n  if (time.daysInMonth < day) {\n    day = time.daysInMonth;\n  }\n\n  return time.set({day});\n}\n\nfunction isNearestWeekDay(evalTime: DateTime, day: number) {\n  if (!isWeekday(evalTime)) {\n    return false;\n  }\n\n  const dayTime = setDayWithinMonth(evalTime, day);\n\n  // if time matches the day, then it is perfect match.\n  if (evalTime.day === dayTime.day) {\n    return true;\n  }\n\n  // if eval time is friday and day is sat, then it is match.\n  if (isDay(dayTime, DAY_SAT)) {\n    // if sat is first of month, then monday is the match\n    if (dayTime.day === 1) {\n      return evalTime.day === 3;\n    }\n\n    // otherwise friday is match\n    return dayTime.day - 1 == evalTime.day;\n  }\n\n  if (isDay(dayTime, DAY_SUN)) {\n    // if sunday is last day of month, then two days minus sunday is match\n    if (dayTime.day === evalTime.daysInMonth) {\n      return evalTime.day === evalTime.daysInMonth - 2;\n    }\n\n    return dayTime.day + 1 == evalTime.day;\n  }\n\n  return false;\n}\n\nfunction isInRange(from: number, to: number, value: number) {\n  return value >= from && value <= to;\n}\n\nfunction isFieldMatches(expr: CronExpr, field: string, timeValue: number): boolean {\n  const value = expr[field];\n\n  if (!value || value.all) {\n    return true;\n  }\n\n  if (value.omit) {\n    // omit in second matches only if second is zero.\n    if (field === FLD_SECOND) {\n      return timeValue === 0;\n    } else {\n      return false;\n    }\n  }\n\n  if (value.values && value.values.includes(timeValue)) {\n    return true;\n  }\n\n  if (value.ranges && value.ranges.find((range) => isInRange(range.from, range.to, timeValue))) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isDayOfMonthMatches(expr: CronExpr, field: string, time: DateTime) {\n  const info = expr[field];\n\n  if (info.omit) {\n    return false;\n  }\n\n  // Last week day of month\n  if (info.lastWeekday && time.day === getLastWeekDay(time)) {\n    return true;\n  }\n\n  // last day of month\n  if (info.lastDay && time.day === getLastDay(time)) {\n    return true;\n  }\n\n  if (\n    !isBlank(info.nearestWeekdays) &&\n    info.nearestWeekdays!!.find((day) => isNearestWeekDay(time, day)) !== undefined\n  ) {\n    return true;\n  }\n\n  // finally we will do usual values check\n  return isFieldMatches(expr, field, time.day);\n}\n\nfunction isDayOfWeekMatches(expr: CronExpr, field: string, time: DateTime) {\n  const info = expr[field];\n  if (info.omit) {\n    return false;\n  }\n\n  if (info.lastDay && getWeekDay(time) === DAY_SAT) {\n    return true;\n  }\n\n  if (!isBlank(info.lastDays) && info.lastDays!!.find((day) => time.day === getLastDay(time, day)) !== undefined) {\n    // Last day of kind\n    return true;\n  }\n\n  // nth day\n  if (!isBlank(info.nthDays)) {\n    if (\n      info.nthDays!!.find((nthDay) => {\n        const days = getDaysOfType(time, nthDay.day_of_week);\n        return days.length > nthDay.instance && days[nthDay.instance - 1] === time.day;\n      }) !== undefined\n    ) {\n      return true;\n    }\n  }\n\n  // finally we will do usual values check\n  return isFieldMatches(expr, field, getWeekDay(time));\n}\n\nfunction isExprMatches(expr: CronExpr, startTime: DateTime) {\n  for (const field of FIELDS_SANS_DAY_REVERSE) {\n    // @ts-ignore\n    if (!isFieldMatches(expr, field, startTime[field])) {\n      return false;\n    }\n  }\n\n  // Now all all easy part of the date matches, now is the time to evaluate complicated day field\n  return isDayOfMonthMatches(expr, FLD_DAY_OF_MONTH, startTime) || isDayOfWeekMatches(expr, FLD_DAY_OF_WEEK, startTime);\n}\n\nfunction isExprsMatches(exprs: CronExprs, time: DateTime): boolean {\n  return exprs.expressions.find((expr: CronExpr) => isExprMatches(expr, time)) !== undefined;\n}\n\nfunction getOutputTime(newTime: DateTime, options: MatchOptions) {\n  if (options.formatInTimezone) {\n    return newTime.toISO({suppressMilliseconds: true});\n  } else {\n    return `${newTime.setZone(TZ_UTC).toISO({suppressMilliseconds: true, includeOffset: false})}Z`;\n  }\n}\n\n/**\n * Evaluates the parsed cron expression and returns the run times.\n * Note that it is assumed that cron expression is parsed using @datasert/cron-parser. Otherwise the results\n * are undefined.\n */\nexport function getFutureMatches(expr: CronExprs | string, options: MatchOptions = {}): string[] {\n  const dtoptions = {zone: options.timezone || TZ_UTC};\n  const startTime = DateTime.fromISO(options.startAt ? options.startAt : new Date().toISOString(), dtoptions);\n  const endTime = options.endAt ? DateTime.fromISO(options.endAt, dtoptions) : undefined;\n  const count = options.matchCount || 5;\n  const nextTimes: string[] = [];\n  const cronExprs = simplifyExprs(typeof expr === 'string' ? parse(expr, options) : deepClone(expr));\n  const timeSeries = getTimeSeries(cronExprs, startTime);\n\n  const maxLoopCount = options.maxLoopCount || MAX_LOOP_COUNT;\n  let loopCount = 0;\n  while (loopCount < maxLoopCount) {\n    loopCount++;\n\n    const newTime = timeSeries.next().value;\n    if (!newTime || (endTime && newTime.toMillis() >= endTime.toMillis())) {\n      break;\n    }\n\n    if (newTime.toMillis() < startTime.toMillis()) {\n      continue;\n    }\n\n    // console.log('####### checking time', newTime.toISO());\n    if (isExprsMatches(cronExprs, newTime)) {\n      const time = getOutputTime(newTime, options);\n      const matchOk = options.matchValidator ? options.matchValidator(time) : true;\n      if (matchOk) {\n        nextTimes.push(time);\n      }\n    }\n\n    if (nextTimes.length >= count) {\n      break;\n    }\n  }\n\n  return nextTimes;\n}\n\nexport function isTimeMatches(exprs: CronExprs | string, time: string, timezone?: string): boolean {\n  const cronExprs = simplifyExprs(typeof exprs === 'string' ? parse(exprs) : deepClone(exprs));\n  const startTime = DateTime.fromISO(time, {zone: timezone || TZ_UTC});\n  return isExprsMatches(cronExprs, startTime);\n}\n"]}